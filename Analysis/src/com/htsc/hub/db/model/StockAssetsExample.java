package com.htsc.hub.db.model;

import java.util.ArrayList;
import java.util.List;

public class StockAssetsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public StockAssetsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("Id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("Id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("Id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("Id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("Id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("Id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("Id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("Id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("Id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("Id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andInitAssetsIsNull() {
			addCriterion("init_assets is null");
			return (Criteria) this;
		}

		public Criteria andInitAssetsIsNotNull() {
			addCriterion("init_assets is not null");
			return (Criteria) this;
		}

		public Criteria andInitAssetsEqualTo(Float value) {
			addCriterion("init_assets =", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsNotEqualTo(Float value) {
			addCriterion("init_assets <>", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsGreaterThan(Float value) {
			addCriterion("init_assets >", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsGreaterThanOrEqualTo(Float value) {
			addCriterion("init_assets >=", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsLessThan(Float value) {
			addCriterion("init_assets <", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsLessThanOrEqualTo(Float value) {
			addCriterion("init_assets <=", value, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsIn(List<Float> values) {
			addCriterion("init_assets in", values, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsNotIn(List<Float> values) {
			addCriterion("init_assets not in", values, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsBetween(Float value1, Float value2) {
			addCriterion("init_assets between", value1, value2, "initAssets");
			return (Criteria) this;
		}

		public Criteria andInitAssetsNotBetween(Float value1, Float value2) {
			addCriterion("init_assets not between", value1, value2,
					"initAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsIsNull() {
			addCriterion("stock_assets is null");
			return (Criteria) this;
		}

		public Criteria andStockAssetsIsNotNull() {
			addCriterion("stock_assets is not null");
			return (Criteria) this;
		}

		public Criteria andStockAssetsEqualTo(Float value) {
			addCriterion("stock_assets =", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsNotEqualTo(Float value) {
			addCriterion("stock_assets <>", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsGreaterThan(Float value) {
			addCriterion("stock_assets >", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsGreaterThanOrEqualTo(Float value) {
			addCriterion("stock_assets >=", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsLessThan(Float value) {
			addCriterion("stock_assets <", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsLessThanOrEqualTo(Float value) {
			addCriterion("stock_assets <=", value, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsIn(List<Float> values) {
			addCriterion("stock_assets in", values, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsNotIn(List<Float> values) {
			addCriterion("stock_assets not in", values, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsBetween(Float value1, Float value2) {
			addCriterion("stock_assets between", value1, value2, "stockAssets");
			return (Criteria) this;
		}

		public Criteria andStockAssetsNotBetween(Float value1, Float value2) {
			addCriterion("stock_assets not between", value1, value2,
					"stockAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsIsNull() {
			addCriterion("cash_assets is null");
			return (Criteria) this;
		}

		public Criteria andCashAssetsIsNotNull() {
			addCriterion("cash_assets is not null");
			return (Criteria) this;
		}

		public Criteria andCashAssetsEqualTo(Float value) {
			addCriterion("cash_assets =", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsNotEqualTo(Float value) {
			addCriterion("cash_assets <>", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsGreaterThan(Float value) {
			addCriterion("cash_assets >", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsGreaterThanOrEqualTo(Float value) {
			addCriterion("cash_assets >=", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsLessThan(Float value) {
			addCriterion("cash_assets <", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsLessThanOrEqualTo(Float value) {
			addCriterion("cash_assets <=", value, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsIn(List<Float> values) {
			addCriterion("cash_assets in", values, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsNotIn(List<Float> values) {
			addCriterion("cash_assets not in", values, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsBetween(Float value1, Float value2) {
			addCriterion("cash_assets between", value1, value2, "cashAssets");
			return (Criteria) this;
		}

		public Criteria andCashAssetsNotBetween(Float value1, Float value2) {
			addCriterion("cash_assets not between", value1, value2,
					"cashAssets");
			return (Criteria) this;
		}

		public Criteria andProfitIsNull() {
			addCriterion("profit is null");
			return (Criteria) this;
		}

		public Criteria andProfitIsNotNull() {
			addCriterion("profit is not null");
			return (Criteria) this;
		}

		public Criteria andProfitEqualTo(Float value) {
			addCriterion("profit =", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitNotEqualTo(Float value) {
			addCriterion("profit <>", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitGreaterThan(Float value) {
			addCriterion("profit >", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitGreaterThanOrEqualTo(Float value) {
			addCriterion("profit >=", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitLessThan(Float value) {
			addCriterion("profit <", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitLessThanOrEqualTo(Float value) {
			addCriterion("profit <=", value, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitIn(List<Float> values) {
			addCriterion("profit in", values, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitNotIn(List<Float> values) {
			addCriterion("profit not in", values, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitBetween(Float value1, Float value2) {
			addCriterion("profit between", value1, value2, "profit");
			return (Criteria) this;
		}

		public Criteria andProfitNotBetween(Float value1, Float value2) {
			addCriterion("profit not between", value1, value2, "profit");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stock_assets
	 * @mbggenerated  Sat Feb 13 20:08:52 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock_assets
     *
     * @mbggenerated do_not_delete_during_merge Wed Feb 10 09:24:55 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}